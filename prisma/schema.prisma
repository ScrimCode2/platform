generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dealAgreements {
  dealKey   String   @db.VarChar(255)
  userId    String   @db.VarChar(255)
  agreed    Boolean  @default(false)
  createdAt DateTime @db.Timestamptz(6)
  updatedAt DateTime @db.Timestamptz(6)

  @@id([dealKey, userId])
}

model deals {
  id                          Int       @id @default(autoincrement())
  buyerId                     String    @db.VarChar(255)
  sellerId                    String    @db.VarChar(255)
  amount                      Decimal   @db.Decimal(10, 2)
  status                      String    @default("opened") @db.VarChar(255)
  dealKey                     String    @unique @db.VarChar(255)
  description                 String
  disputeInitiator            String?   @db.VarChar(255)
  createdAt                   DateTime  @db.Timestamptz(6)
  updatedAt                   DateTime  @db.Timestamptz(6)
  users_deals_buyerIdTousers  users     @relation("deals_buyerIdTousers", fields: [buyerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_deals_sellerIdTousers users     @relation("deals_sellerIdTousers", fields: [sellerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviews                     reviews[]
}

model reviews {
  id        Int      @id @default(autoincrement())
  userId    String   @db.VarChar(255)
  dealId    Int
  content   String
  rating    Int?
  createdAt DateTime @db.Timestamptz(6)
  updatedAt DateTime @db.Timestamptz(6)
  deals     deals    @relation(fields: [dealId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transactions {
  id        Int      @id @default(autoincrement())
  userId    String   @db.VarChar(255)
  type      String   @db.VarChar(255)
  amount    Decimal  @db.Decimal(10, 2)
  createdAt DateTime @db.Timestamptz(6)
  updatedAt DateTime @db.Timestamptz(6)
  users     users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                          String         @id @db.VarChar(255)
  username                    String         @unique @db.VarChar(255)
  balance                     Decimal        @default(0) @db.Decimal(10, 2)
  chatId                      String?        @db.VarChar(255)
  createdAt                   DateTime       @db.Timestamptz(6)
  updatedAt                   DateTime       @db.Timestamptz(6)
  deals_deals_buyerIdTousers  deals[]        @relation("deals_buyerIdTousers")
  deals_deals_sellerIdTousers deals[]        @relation("deals_sellerIdTousers")
  reviews                     reviews[]
  transactions                transactions[]
}
